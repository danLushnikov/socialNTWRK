{"version":3,"file":"static/js/677.8af97b94.chunk.js","mappings":"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","sources":["redux/usersSelector.ts","webpack://my-ts-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","webpack://my-ts-app/./src/components/Users/Users.module.css?b9d0","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["import { AppStateType } from \"./reduxStore\"\r\n\r\nexport const getUsers = (state:AppStateType) => {\r\n   return state.usersPage.users\r\n}\r\nexport const getFilter = (state: AppStateType) => {\r\n\treturn state.usersPage.filter\r\n}\r\nexport const getPageSize = (state:AppStateType) => {\r\n   return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state:AppStateType) => {\r\n   return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state:AppStateType) => {\r\n   return  state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state:AppStateType) => {\r\n   return  state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state:AppStateType) => {\r\n   return  state.usersPage.followingInProgress\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__B4DhM\",\"paginator\":\"Paginator_paginator__KuDue\"};","import React, { useState } from 'react'\r\nimport s from './Paginator.module.css'\r\n\r\ntype Props = {\r\n\ttotalItemsCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tonPageChange: (pageNumber: number) => void\r\n\tportionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<Props> = ({\r\n\ttotalItemsCount,\r\n\tpageSize,\r\n\tcurrentPage,\r\n\tonPageChange,\r\n\tportionSize = 10,\r\n}) => {\r\n\tlet pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\tlet pages = []\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\r\n\tlet allPortionCounts = Math.ceil(pagesCount / portionSize)\r\n\tlet [portionNumber, setPortionNumber] = useState(1)\r\n\r\n\tlet beginningOfPortion = (portionNumber - 1) * portionSize + 1\r\n\tlet endingOfPortion = portionNumber * portionSize\r\n\r\n\treturn (\r\n\t\t<div className={s.paginator}>\r\n\t\t\t{portionNumber > 1 && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPortionNumber(portionNumber - 1)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tPrev\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t{pages\r\n\t\t\t\t.filter(p => p >= beginningOfPortion && p <= endingOfPortion)\r\n\t\t\t\t.map(pageNumber => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tkey={pageNumber}\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcurrentPage === pageNumber ? s.selectedPage : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonPageChange(pageNumber)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{pageNumber}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t{allPortionCounts > portionNumber && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPortionNumber(portionNumber + 1)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tNext\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Paginator\r\n","// extracted by mini-css-extract-plugin\nexport default {\"usersPage\":\"Users_usersPage__Nmu+H\",\"users\":\"Users_users__xODxE\",\"leftSide\":\"Users_leftSide__JbK3r\",\"avatarImg\":\"Users_avatarImg__onuYr\",\"followOrUnFollowBtn\":\"Users_followOrUnFollowBtn__PH06N\",\"rightSide\":\"Users_rightSide__kixV9\",\"nameAndStatus\":\"Users_nameAndStatus__IA5dn\",\"name\":\"Users_name__TxG9K\",\"status\":\"Users_status__3yAZ5\",\"location\":\"Users_location__kskqi\"};","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport userPhoto from '../../assets/images/logoUser.png'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UsersType } from '../../types/commonTypes';\r\n\r\ntype Props = {\r\n\tuser: UsersType\r\n\tfollowingInProgress:Array<number>\r\n\tfollow:(userId:number)=>void\r\n\tunFollow: (userId: number) => void\r\n}\r\nlet User:React.FC<Props> = ({ user,followingInProgress, follow, unFollow }) => {\r\n\treturn (\r\n\t\t<div key={user.id} className={s.users}>\r\n\t\t\t<div className={s.leftSide}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t<img className={s.avatarImg} src={user.photos.small ? user.photos.small : userPhoto}\r\n\t\t\t\t\t\t\talt=\"#\" />\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.followOrUnFollowBtn}>\r\n\t\t\t\t\t{user.followed\r\n\t\t\t\t\t\t? <button disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tunFollow(user.id)\r\n\t\t\t\t\t\t\t}}>UnFollow</button>\r\n\t\t\t\t\t\t: <button disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tfollow(user.id)\r\n\t\t\t\t\t\t\t}}>Follow</button>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.rightSide}>\r\n\t\t\t\t<div className={s.nameAndStatus}>\r\n\t\t\t\t\t<div className={s.name}>{user.name}</div>\r\n\t\t\t\t\t<div className={s.status}>{user.status}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.location}>\r\n\t\t\t\t\t<div className={s.country}>{\"user.location.country\"}</div>\r\n\t\t\t\t\t{/* <div className={s.city}>{\"user.location.city\"}</div> */}\r\n\t\t\t\t\t<button>qwerty</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default User;","import React from 'react'\r\nimport { Field, Formik } from 'formik'\r\nimport { FilterType } from '../../redux/usersReducer'\r\nimport { useSelector } from 'react-redux'\r\nimport { getFilter } from '../../redux/usersSelector'\r\n\r\n\r\nconst usersSearchFormValidate = (values: FormProps) => {\r\n\tconst errors = {} as any\r\n\tif (!values) {\r\n\t\terrors.term = 'Required'\r\n\t}\r\n\treturn errors\r\n}\r\n\r\nexport const UsersSearchForm:React.FC<Props> = (props) => {\r\n\r\n\t\r\n\tconst submit = (values: FormProps, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n\t\tconst IFilter: FilterType = {\r\n\t\t\tterm: values.term,\r\n\t\t\tfriend: values.friend === 'null'? null : values.friend === 'true'? true: false \r\n\t\t}\r\n\t\tprops.onFilterChange(IFilter)\r\n\t\tsetSubmitting(false)\r\n\t}\r\n\t\tconst filter = useSelector(getFilter)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize={true}\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tterm: filter.term,\r\n\t\t\t\t\tfriend: String(filter.friend) as FriendFormType,\r\n\t\t\t\t}}\r\n\t\t\t\tvalidate={usersSearchFormValidate}\r\n\t\t\t\tonSubmit={submit}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tisSubmitting /* and other goodies */,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='term'\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tvalue={values.term}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.term && touched.term && errors.term}\r\n\t\t\t\t\t\t<Field as='select' name='friend'>\r\n\t\t\t\t\t\t\t<option value='null'>all</option>\r\n\t\t\t\t\t\t\t<option value='true'>only followed</option>\r\n\t\t\t\t\t\t\t<option value='false'>only unFollowed</option>\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button type='submit' disabled={isSubmitting}>\r\n\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</>\r\n\t)\r\n}\r\ntype Props = {\r\n\tonFilterChange: (filter: FilterType) => void\r\n}\r\ntype FriendFormType = 'null' | 'true' | 'false'\r\n\r\ntype FormProps = {\r\n\tterm: string\r\n\tfriend: FriendFormType\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { AnyAction } from 'redux'\r\nimport { AppDispatch } from '../../redux/reduxStore'\r\nimport {\r\n\taddUsers,\r\n\tFilterType,\r\n\tfollow,\r\n\tunFollow,\r\n} from '../../redux/usersReducer'\r\nimport {\r\n\tgetCurrentPage,\r\n\tgetFilter,\r\n\tgetFollowingInProgress,\r\n\tgetPageSize,\r\n\tgetTotalUsersCount,\r\n\tgetUsers,\r\n} from '../../redux/usersSelector'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\nimport s from './Users.module.css'\r\nimport { UsersSearchForm } from './UsersSearchForm'\r\n\r\nexport const Users: React.FC = () => {\r\n\tconst users = useSelector(getUsers)\r\n\tconst totalUsersCount = useSelector(getTotalUsersCount)\r\n\tconst currentPage = useSelector(getCurrentPage)\r\n\tconst pageSize = useSelector(getPageSize)\r\n\tconst filter = useSelector(getFilter)\r\n\tconst followingInProgress = useSelector(getFollowingInProgress)\r\n\t//todo: u should do correct typing of dispatch function, type AppDispatch in redux-store is not working\r\n\tconst dispatch: AppDispatch = useDispatch()\r\n\tconst onPageChange = (pageNumber: number) => {\r\n\t\tdispatch(addUsers(pageNumber, pageSize, filter) as unknown as AnyAction)\r\n\t}\r\n\tconst onFilterChange = (filter: FilterType) => {\r\n\t\tdispatch(addUsers(1, pageSize, filter) as unknown as AnyAction)\r\n\t}\r\n\tconst following = (userId: number) => {\r\n\t\tdispatch(follow(userId) as unknown as AnyAction)\r\n\t}\r\n\tconst unFollowing = (userId: number) => {\r\n\t\tdispatch(unFollow(userId) as unknown as AnyAction)\r\n\t}\r\n\r\n\tconst navigate = useNavigate()\r\n\tconst location = useLocation()\r\n\tconst [searchParams, setSearchParams] = useSearchParams(location.search)\r\n\t// Users for first rendering with useEffect with empty dependencies\r\n\tuseEffect(() => {\r\n\t\tconst parsed = Object.fromEntries([\r\n\t\t\t...(searchParams as any),\r\n\t\t]) as QueryParamsType\r\n\t\tlet actualPage = currentPage\r\n\t\tlet actualFilter = filter\r\n\t\tif (!!parsed.page) actualPage = Number(parsed.page)\r\n\t\tif (!!parsed.term) actualFilter = { ...actualFilter, term: parsed.term }\r\n\t\tif (!!parsed.friend)\r\n\t\t\tactualFilter = {\r\n\t\t\t\t...actualFilter,\r\n\t\t\t\tfriend:\r\n\t\t\t\t\tparsed.friend === 'null'\r\n\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t: parsed.friend === 'true'\r\n\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t: false,\r\n\t\t\t}\r\n\t\tdispatch(\r\n\t\t\taddUsers(actualPage, pageSize, actualFilter) as unknown as AnyAction\r\n\t\t)\r\n\t}, [])\r\n\t//\tuseEffect for rerendering when we get different filter info\r\n\tuseEffect(() => {\r\n\t\tconst query = {} as QueryParamsType\r\n\t\tif (filter.term) query.term = filter.term\r\n\t\tif (filter.friend !== null) query.friend = String(filter.friend)\r\n\t\tif (currentPage !== 1) query.page = String(currentPage)\r\n\t\tconst queryToString = new URLSearchParams(query)\r\n\t\tnavigate('/users')\r\n\t\tsetSearchParams(String(queryToString))\r\n\t}, [filter, currentPage])\r\n\r\n\treturn (\r\n\t\t<div className={s.usersPage}>\r\n\t\t\t<h2>Users</h2>\r\n\t\t\t<UsersSearchForm onFilterChange={onFilterChange} />\r\n\t\t\t<div>\r\n\t\t\t\t<Paginator\r\n\t\t\t\t\tonPageChange={onPageChange}\r\n\t\t\t\t\ttotalItemsCount={totalUsersCount}\r\n\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{users.map(user => (\r\n\t\t\t\t<User\r\n\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tfollow={following}\r\n\t\t\t\t\tunFollow={unFollowing}\r\n\t\t\t\t\tfollowingInProgress={followingInProgress}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\ntype QueryParamsType = {\r\n\tterm: string\r\n\tfriend: string\r\n\tpage: string\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { getIsFetching } from '../../redux/usersSelector'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { Users } from './Users'\r\n\r\nconst UsersPage: React.FC = () => {\r\n\tconst isFetching = useSelector(getIsFetching)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isFetching && <Preloader />}\r\n\t\t\t<Users />\r\n\t\t</>\r\n\t)\r\n}\r\nexport default UsersPage\r\n"],"names":["getUsers","state","usersPage","users","getFilter","filter","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","_ref","totalItemsCount","onPageChange","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","allPortionCounts","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","beginningOfPortion","endingOfPortion","_jsxs","className","s","children","_jsx","onClick","p","map","pageNumber","undefined","user","follow","unFollow","NavLink","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","name","status","usersSearchFormValidate","values","errors","term","UsersSearchForm","props","useSelector","_Fragment","Formik","enableReinitialize","initialValues","friend","String","validate","onSubmit","setSubmitting","IFilter","onFilterChange","_ref2","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","onChange","onBlur","value","Field","as","Users","dispatch","useDispatch","following","userId","unFollowing","navigate","useNavigate","location","useLocation","_useSearchParams","useSearchParams","search","_useSearchParams2","searchParams","setSearchParams","useEffect","parsed","Object","fromEntries","_toConsumableArray","actualPage","actualFilter","page","Number","_objectSpread","addUsers","query","queryToString","URLSearchParams","Paginator","User","Preloader"],"sourceRoot":""}